Terminaux inutilisés dans la grammaire

   COMMENTAIRE


Grammaire

    0 $accept: axiom $end

    1 axiom: fonction
    2      | action
    3      | %empty

    4 fonction: TYPE MAIN '(' ')' '{' action retour '}'
    5         | TYPE MAIN '(' ')' '{' retour '}'

    6 retour: RETURN ENTIER ';'

    7 action: instruction
    8       | instruction action

    9 instruction: declaration ';'
   10            | operation ';'
   11            | condition
   12            | boucle
   13            | affectation ';'
   14            | incrementation ';'

   15 declaration: TYPE ID
   16            | TYPE affectation

   17 affectation: ID '=' valeur
   18            | ID '=' operation

   19 valeur: ENTIER
   20       | ID

   21 expression: valeur
   22           | operation

   23 operation: expression '+' expression
   24          | expression '-' expression
   25          | expression '*' expression
   26          | expression '/' expression
   27          | '(' expression ')'

   28 condition: IF '(' comparaison ')' '{' action '}'
   29          | IF '(' comparaison ')' '{' action '}' ELSE '{' action '}'

   30 boucle: WHILE '(' comparaison ')' '{' action '}'
   31       | DO '{' action '}' WHILE '(' comparaison ')' ';'
   32       | FOR '(' TYPE affectation ';' comparaison ';' incrementation ')' '{' action '}'
   33       | FOR '(' TYPE affectation ';' comparaison ';' operation ')' '{' action '}'

   34 incrementation: ID INCR
   35               | ID DECR

   36 comparaison: expression EGAL expression
   37            | expression INEGAL expression
   38            | expression INFEG expression
   39            | expression SUPEG expression
   40            | expression '>' expression
   41            | expression '<' expression


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
'(' (40) 4 5 27 28 29 30 31 32 33
')' (41) 4 5 27 28 29 30 31 32 33
'*' (42) 25
'+' (43) 23
'-' (45) 24
'/' (47) 26
';' (59) 6 9 10 13 14 31 32 33
'<' (60) 41
'=' (61) 17 18
'>' (62) 40
'{' (123) 4 5 28 29 30 31 32 33
'}' (125) 4 5 28 29 30 31 32 33
error (256)
ID (258) 15 17 18 20 34 35
TYPE (259) 4 5 15 16 32 33
MAIN (260) 4 5
RETURN (261) 6
ENTIER (262) 6 19
IF (263) 28 29
ELSE (264) 29
WHILE (265) 30 31
DO (266) 31
FOR (267) 32 33
COMMENTAIRE (268)
INCR (269) 34
DECR (270) 35
EGAL (271) 36
INEGAL (272) 37
SUPEG (273) 39
INFEG (274) 38


Non-terminaux, suivis des règles où ils apparaissent

$accept (32)
    à gauche: 0
axiom (33)
    à gauche: 1 2 3, à droite: 0
fonction (34)
    à gauche: 4 5, à droite: 1
retour (35)
    à gauche: 6, à droite: 4 5
action (36)
    à gauche: 7 8, à droite: 2 4 8 28 29 30 31 32 33
instruction (37)
    à gauche: 9 10 11 12 13 14, à droite: 7 8
declaration (38)
    à gauche: 15 16, à droite: 9
affectation (39)
    à gauche: 17 18, à droite: 13 16 32 33
valeur (40)
    à gauche: 19 20, à droite: 17 21
expression (41)
    à gauche: 21 22, à droite: 23 24 25 26 27 36 37 38 39 40 41
operation (42)
    à gauche: 23 24 25 26 27, à droite: 10 18 22 33
condition (43)
    à gauche: 28 29, à droite: 11
boucle (44)
    à gauche: 30 31 32 33, à droite: 12
incrementation (45)
    à gauche: 34 35, à droite: 14 32
comparaison (46)
    à gauche: 36 37 38 39 40 41, à droite: 28 29 30 31 32 33


État 0

    0 $accept: . axiom $end

    ID      décalage et aller à l'état 1
    TYPE    décalage et aller à l'état 2
    ENTIER  décalage et aller à l'état 3
    IF      décalage et aller à l'état 4
    WHILE   décalage et aller à l'état 5
    DO      décalage et aller à l'état 6
    FOR     décalage et aller à l'état 7
    '('     décalage et aller à l'état 8

    $défaut  réduction par utilisation de la règle 3 (axiom)

    axiom           aller à l'état 9
    fonction        aller à l'état 10
    action          aller à l'état 11
    instruction     aller à l'état 12
    declaration     aller à l'état 13
    affectation     aller à l'état 14
    valeur          aller à l'état 15
    expression      aller à l'état 16
    operation       aller à l'état 17
    condition       aller à l'état 18
    boucle          aller à l'état 19
    incrementation  aller à l'état 20


État 1

   17 affectation: ID . '=' valeur
   18            | ID . '=' operation
   20 valeur: ID .
   34 incrementation: ID . INCR
   35               | ID . DECR

    INCR  décalage et aller à l'état 21
    DECR  décalage et aller à l'état 22
    '='   décalage et aller à l'état 23

    $défaut  réduction par utilisation de la règle 20 (valeur)


État 2

    4 fonction: TYPE . MAIN '(' ')' '{' action retour '}'
    5         | TYPE . MAIN '(' ')' '{' retour '}'
   15 declaration: TYPE . ID
   16            | TYPE . affectation

    ID    décalage et aller à l'état 24
    MAIN  décalage et aller à l'état 25

    affectation  aller à l'état 26


État 3

   19 valeur: ENTIER .

    $défaut  réduction par utilisation de la règle 19 (valeur)


État 4

   28 condition: IF . '(' comparaison ')' '{' action '}'
   29          | IF . '(' comparaison ')' '{' action '}' ELSE '{' action '}'

    '('  décalage et aller à l'état 27


État 5

   30 boucle: WHILE . '(' comparaison ')' '{' action '}'

    '('  décalage et aller à l'état 28


État 6

   31 boucle: DO . '{' action '}' WHILE '(' comparaison ')' ';'

    '{'  décalage et aller à l'état 29


État 7

   32 boucle: FOR . '(' TYPE affectation ';' comparaison ';' incrementation ')' '{' action '}'
   33       | FOR . '(' TYPE affectation ';' comparaison ';' operation ')' '{' action '}'

    '('  décalage et aller à l'état 30


État 8

   27 operation: '(' . expression ')'

    ID      décalage et aller à l'état 31
    ENTIER  décalage et aller à l'état 3
    '('     décalage et aller à l'état 8

    valeur      aller à l'état 15
    expression  aller à l'état 32
    operation   aller à l'état 33


État 9

    0 $accept: axiom . $end

    $end  décalage et aller à l'état 34


État 10

    1 axiom: fonction .

    $défaut  réduction par utilisation de la règle 1 (axiom)


État 11

    2 axiom: action .

    $défaut  réduction par utilisation de la règle 2 (axiom)


État 12

    7 action: instruction .
    8       | instruction . action

    ID      décalage et aller à l'état 1
    TYPE    décalage et aller à l'état 35
    ENTIER  décalage et aller à l'état 3
    IF      décalage et aller à l'état 4
    WHILE   décalage et aller à l'état 5
    DO      décalage et aller à l'état 6
    FOR     décalage et aller à l'état 7
    '('     décalage et aller à l'état 8

    $défaut  réduction par utilisation de la règle 7 (action)

    action          aller à l'état 36
    instruction     aller à l'état 12
    declaration     aller à l'état 13
    affectation     aller à l'état 14
    valeur          aller à l'état 15
    expression      aller à l'état 16
    operation       aller à l'état 17
    condition       aller à l'état 18
    boucle          aller à l'état 19
    incrementation  aller à l'état 20


État 13

    9 instruction: declaration . ';'

    ';'  décalage et aller à l'état 37


État 14

   13 instruction: affectation . ';'

    ';'  décalage et aller à l'état 38


État 15

   21 expression: valeur .

    $défaut  réduction par utilisation de la règle 21 (expression)


État 16

   23 operation: expression . '+' expression
   24          | expression . '-' expression
   25          | expression . '*' expression
   26          | expression . '/' expression

    '+'  décalage et aller à l'état 39
    '-'  décalage et aller à l'état 40
    '*'  décalage et aller à l'état 41
    '/'  décalage et aller à l'état 42


État 17

   10 instruction: operation . ';'
   22 expression: operation .

    ';'  décalage et aller à l'état 43

    $défaut  réduction par utilisation de la règle 22 (expression)


État 18

   11 instruction: condition .

    $défaut  réduction par utilisation de la règle 11 (instruction)


État 19

   12 instruction: boucle .

    $défaut  réduction par utilisation de la règle 12 (instruction)


État 20

   14 instruction: incrementation . ';'

    ';'  décalage et aller à l'état 44


État 21

   34 incrementation: ID INCR .

    $défaut  réduction par utilisation de la règle 34 (incrementation)


État 22

   35 incrementation: ID DECR .

    $défaut  réduction par utilisation de la règle 35 (incrementation)


État 23

   17 affectation: ID '=' . valeur
   18            | ID '=' . operation

    ID      décalage et aller à l'état 31
    ENTIER  décalage et aller à l'état 3
    '('     décalage et aller à l'état 8

    valeur      aller à l'état 45
    expression  aller à l'état 16
    operation   aller à l'état 46


État 24

   15 declaration: TYPE ID .
   17 affectation: ID . '=' valeur
   18            | ID . '=' operation

    '='  décalage et aller à l'état 23

    $défaut  réduction par utilisation de la règle 15 (declaration)


État 25

    4 fonction: TYPE MAIN . '(' ')' '{' action retour '}'
    5         | TYPE MAIN . '(' ')' '{' retour '}'

    '('  décalage et aller à l'état 47


État 26

   16 declaration: TYPE affectation .

    $défaut  réduction par utilisation de la règle 16 (declaration)


État 27

   28 condition: IF '(' . comparaison ')' '{' action '}'
   29          | IF '(' . comparaison ')' '{' action '}' ELSE '{' action '}'

    ID      décalage et aller à l'état 31
    ENTIER  décalage et aller à l'état 3
    '('     décalage et aller à l'état 8

    valeur       aller à l'état 15
    expression   aller à l'état 48
    operation    aller à l'état 33
    comparaison  aller à l'état 49


État 28

   30 boucle: WHILE '(' . comparaison ')' '{' action '}'

    ID      décalage et aller à l'état 31
    ENTIER  décalage et aller à l'état 3
    '('     décalage et aller à l'état 8

    valeur       aller à l'état 15
    expression   aller à l'état 48
    operation    aller à l'état 33
    comparaison  aller à l'état 50


État 29

   31 boucle: DO '{' . action '}' WHILE '(' comparaison ')' ';'

    ID      décalage et aller à l'état 1
    TYPE    décalage et aller à l'état 35
    ENTIER  décalage et aller à l'état 3
    IF      décalage et aller à l'état 4
    WHILE   décalage et aller à l'état 5
    DO      décalage et aller à l'état 6
    FOR     décalage et aller à l'état 7
    '('     décalage et aller à l'état 8

    action          aller à l'état 51
    instruction     aller à l'état 12
    declaration     aller à l'état 13
    affectation     aller à l'état 14
    valeur          aller à l'état 15
    expression      aller à l'état 16
    operation       aller à l'état 17
    condition       aller à l'état 18
    boucle          aller à l'état 19
    incrementation  aller à l'état 20


État 30

   32 boucle: FOR '(' . TYPE affectation ';' comparaison ';' incrementation ')' '{' action '}'
   33       | FOR '(' . TYPE affectation ';' comparaison ';' operation ')' '{' action '}'

    TYPE  décalage et aller à l'état 52


État 31

   20 valeur: ID .

    $défaut  réduction par utilisation de la règle 20 (valeur)


État 32

   23 operation: expression . '+' expression
   24          | expression . '-' expression
   25          | expression . '*' expression
   26          | expression . '/' expression
   27          | '(' expression . ')'

    '+'  décalage et aller à l'état 39
    '-'  décalage et aller à l'état 40
    '*'  décalage et aller à l'état 41
    '/'  décalage et aller à l'état 42
    ')'  décalage et aller à l'état 53


État 33

   22 expression: operation .

    $défaut  réduction par utilisation de la règle 22 (expression)


État 34

    0 $accept: axiom $end .

    $défaut  accepter


État 35

   15 declaration: TYPE . ID
   16            | TYPE . affectation

    ID  décalage et aller à l'état 24

    affectation  aller à l'état 26


État 36

    8 action: instruction action .

    $défaut  réduction par utilisation de la règle 8 (action)


État 37

    9 instruction: declaration ';' .

    $défaut  réduction par utilisation de la règle 9 (instruction)


État 38

   13 instruction: affectation ';' .

    $défaut  réduction par utilisation de la règle 13 (instruction)


État 39

   23 operation: expression '+' . expression

    ID      décalage et aller à l'état 31
    ENTIER  décalage et aller à l'état 3
    '('     décalage et aller à l'état 8

    valeur      aller à l'état 15
    expression  aller à l'état 54
    operation   aller à l'état 33


État 40

   24 operation: expression '-' . expression

    ID      décalage et aller à l'état 31
    ENTIER  décalage et aller à l'état 3
    '('     décalage et aller à l'état 8

    valeur      aller à l'état 15
    expression  aller à l'état 55
    operation   aller à l'état 33


État 41

   25 operation: expression '*' . expression

    ID      décalage et aller à l'état 31
    ENTIER  décalage et aller à l'état 3
    '('     décalage et aller à l'état 8

    valeur      aller à l'état 15
    expression  aller à l'état 56
    operation   aller à l'état 33


État 42

   26 operation: expression '/' . expression

    ID      décalage et aller à l'état 31
    ENTIER  décalage et aller à l'état 3
    '('     décalage et aller à l'état 8

    valeur      aller à l'état 15
    expression  aller à l'état 57
    operation   aller à l'état 33


État 43

   10 instruction: operation ';' .

    $défaut  réduction par utilisation de la règle 10 (instruction)


État 44

   14 instruction: incrementation ';' .

    $défaut  réduction par utilisation de la règle 14 (instruction)


État 45

   17 affectation: ID '=' valeur .
   21 expression: valeur .

    ';'       réduction par utilisation de la règle 17 (affectation)
    $défaut  réduction par utilisation de la règle 21 (expression)


État 46

   18 affectation: ID '=' operation .
   22 expression: operation .

    ';'       réduction par utilisation de la règle 18 (affectation)
    $défaut  réduction par utilisation de la règle 22 (expression)


État 47

    4 fonction: TYPE MAIN '(' . ')' '{' action retour '}'
    5         | TYPE MAIN '(' . ')' '{' retour '}'

    ')'  décalage et aller à l'état 58


État 48

   23 operation: expression . '+' expression
   24          | expression . '-' expression
   25          | expression . '*' expression
   26          | expression . '/' expression
   36 comparaison: expression . EGAL expression
   37            | expression . INEGAL expression
   38            | expression . INFEG expression
   39            | expression . SUPEG expression
   40            | expression . '>' expression
   41            | expression . '<' expression

    EGAL    décalage et aller à l'état 59
    INEGAL  décalage et aller à l'état 60
    SUPEG   décalage et aller à l'état 61
    INFEG   décalage et aller à l'état 62
    '+'     décalage et aller à l'état 39
    '-'     décalage et aller à l'état 40
    '*'     décalage et aller à l'état 41
    '/'     décalage et aller à l'état 42
    '>'     décalage et aller à l'état 63
    '<'     décalage et aller à l'état 64


État 49

   28 condition: IF '(' comparaison . ')' '{' action '}'
   29          | IF '(' comparaison . ')' '{' action '}' ELSE '{' action '}'

    ')'  décalage et aller à l'état 65


État 50

   30 boucle: WHILE '(' comparaison . ')' '{' action '}'

    ')'  décalage et aller à l'état 66


État 51

   31 boucle: DO '{' action . '}' WHILE '(' comparaison ')' ';'

    '}'  décalage et aller à l'état 67


État 52

   32 boucle: FOR '(' TYPE . affectation ';' comparaison ';' incrementation ')' '{' action '}'
   33       | FOR '(' TYPE . affectation ';' comparaison ';' operation ')' '{' action '}'

    ID  décalage et aller à l'état 68

    affectation  aller à l'état 69


État 53

   27 operation: '(' expression ')' .

    $défaut  réduction par utilisation de la règle 27 (operation)


État 54

   23 operation: expression . '+' expression
   23          | expression '+' expression .
   24          | expression . '-' expression
   25          | expression . '*' expression
   26          | expression . '/' expression

    '*'  décalage et aller à l'état 41
    '/'  décalage et aller à l'état 42

    $défaut  réduction par utilisation de la règle 23 (operation)


État 55

   23 operation: expression . '+' expression
   24          | expression . '-' expression
   24          | expression '-' expression .
   25          | expression . '*' expression
   26          | expression . '/' expression

    '*'  décalage et aller à l'état 41
    '/'  décalage et aller à l'état 42

    $défaut  réduction par utilisation de la règle 24 (operation)


État 56

   23 operation: expression . '+' expression
   24          | expression . '-' expression
   25          | expression . '*' expression
   25          | expression '*' expression .
   26          | expression . '/' expression

    $défaut  réduction par utilisation de la règle 25 (operation)


État 57

   23 operation: expression . '+' expression
   24          | expression . '-' expression
   25          | expression . '*' expression
   26          | expression . '/' expression
   26          | expression '/' expression .

    $défaut  réduction par utilisation de la règle 26 (operation)


État 58

    4 fonction: TYPE MAIN '(' ')' . '{' action retour '}'
    5         | TYPE MAIN '(' ')' . '{' retour '}'

    '{'  décalage et aller à l'état 70


État 59

   36 comparaison: expression EGAL . expression

    ID      décalage et aller à l'état 31
    ENTIER  décalage et aller à l'état 3
    '('     décalage et aller à l'état 8

    valeur      aller à l'état 15
    expression  aller à l'état 71
    operation   aller à l'état 33


État 60

   37 comparaison: expression INEGAL . expression

    ID      décalage et aller à l'état 31
    ENTIER  décalage et aller à l'état 3
    '('     décalage et aller à l'état 8

    valeur      aller à l'état 15
    expression  aller à l'état 72
    operation   aller à l'état 33


État 61

   39 comparaison: expression SUPEG . expression

    ID      décalage et aller à l'état 31
    ENTIER  décalage et aller à l'état 3
    '('     décalage et aller à l'état 8

    valeur      aller à l'état 15
    expression  aller à l'état 73
    operation   aller à l'état 33


État 62

   38 comparaison: expression INFEG . expression

    ID      décalage et aller à l'état 31
    ENTIER  décalage et aller à l'état 3
    '('     décalage et aller à l'état 8

    valeur      aller à l'état 15
    expression  aller à l'état 74
    operation   aller à l'état 33


État 63

   40 comparaison: expression '>' . expression

    ID      décalage et aller à l'état 31
    ENTIER  décalage et aller à l'état 3
    '('     décalage et aller à l'état 8

    valeur      aller à l'état 15
    expression  aller à l'état 75
    operation   aller à l'état 33


État 64

   41 comparaison: expression '<' . expression

    ID      décalage et aller à l'état 31
    ENTIER  décalage et aller à l'état 3
    '('     décalage et aller à l'état 8

    valeur      aller à l'état 15
    expression  aller à l'état 76
    operation   aller à l'état 33


État 65

   28 condition: IF '(' comparaison ')' . '{' action '}'
   29          | IF '(' comparaison ')' . '{' action '}' ELSE '{' action '}'

    '{'  décalage et aller à l'état 77


État 66

   30 boucle: WHILE '(' comparaison ')' . '{' action '}'

    '{'  décalage et aller à l'état 78


État 67

   31 boucle: DO '{' action '}' . WHILE '(' comparaison ')' ';'

    WHILE  décalage et aller à l'état 79


État 68

   17 affectation: ID . '=' valeur
   18            | ID . '=' operation

    '='  décalage et aller à l'état 23


État 69

   32 boucle: FOR '(' TYPE affectation . ';' comparaison ';' incrementation ')' '{' action '}'
   33       | FOR '(' TYPE affectation . ';' comparaison ';' operation ')' '{' action '}'

    ';'  décalage et aller à l'état 80


État 70

    4 fonction: TYPE MAIN '(' ')' '{' . action retour '}'
    5         | TYPE MAIN '(' ')' '{' . retour '}'

    ID      décalage et aller à l'état 1
    TYPE    décalage et aller à l'état 35
    RETURN  décalage et aller à l'état 81
    ENTIER  décalage et aller à l'état 3
    IF      décalage et aller à l'état 4
    WHILE   décalage et aller à l'état 5
    DO      décalage et aller à l'état 6
    FOR     décalage et aller à l'état 7
    '('     décalage et aller à l'état 8

    retour          aller à l'état 82
    action          aller à l'état 83
    instruction     aller à l'état 12
    declaration     aller à l'état 13
    affectation     aller à l'état 14
    valeur          aller à l'état 15
    expression      aller à l'état 16
    operation       aller à l'état 17
    condition       aller à l'état 18
    boucle          aller à l'état 19
    incrementation  aller à l'état 20


État 71

   23 operation: expression . '+' expression
   24          | expression . '-' expression
   25          | expression . '*' expression
   26          | expression . '/' expression
   36 comparaison: expression EGAL expression .

    '+'  décalage et aller à l'état 39
    '-'  décalage et aller à l'état 40
    '*'  décalage et aller à l'état 41
    '/'  décalage et aller à l'état 42

    $défaut  réduction par utilisation de la règle 36 (comparaison)


État 72

   23 operation: expression . '+' expression
   24          | expression . '-' expression
   25          | expression . '*' expression
   26          | expression . '/' expression
   37 comparaison: expression INEGAL expression .

    '+'  décalage et aller à l'état 39
    '-'  décalage et aller à l'état 40
    '*'  décalage et aller à l'état 41
    '/'  décalage et aller à l'état 42

    $défaut  réduction par utilisation de la règle 37 (comparaison)


État 73

   23 operation: expression . '+' expression
   24          | expression . '-' expression
   25          | expression . '*' expression
   26          | expression . '/' expression
   39 comparaison: expression SUPEG expression .

    '+'  décalage et aller à l'état 39
    '-'  décalage et aller à l'état 40
    '*'  décalage et aller à l'état 41
    '/'  décalage et aller à l'état 42

    $défaut  réduction par utilisation de la règle 39 (comparaison)


État 74

   23 operation: expression . '+' expression
   24          | expression . '-' expression
   25          | expression . '*' expression
   26          | expression . '/' expression
   38 comparaison: expression INFEG expression .

    '+'  décalage et aller à l'état 39
    '-'  décalage et aller à l'état 40
    '*'  décalage et aller à l'état 41
    '/'  décalage et aller à l'état 42

    $défaut  réduction par utilisation de la règle 38 (comparaison)


État 75

   23 operation: expression . '+' expression
   24          | expression . '-' expression
   25          | expression . '*' expression
   26          | expression . '/' expression
   40 comparaison: expression '>' expression .

    '+'  décalage et aller à l'état 39
    '-'  décalage et aller à l'état 40
    '*'  décalage et aller à l'état 41
    '/'  décalage et aller à l'état 42

    $défaut  réduction par utilisation de la règle 40 (comparaison)


État 76

   23 operation: expression . '+' expression
   24          | expression . '-' expression
   25          | expression . '*' expression
   26          | expression . '/' expression
   41 comparaison: expression '<' expression .

    '+'  décalage et aller à l'état 39
    '-'  décalage et aller à l'état 40
    '*'  décalage et aller à l'état 41
    '/'  décalage et aller à l'état 42

    $défaut  réduction par utilisation de la règle 41 (comparaison)


État 77

   28 condition: IF '(' comparaison ')' '{' . action '}'
   29          | IF '(' comparaison ')' '{' . action '}' ELSE '{' action '}'

    ID      décalage et aller à l'état 1
    TYPE    décalage et aller à l'état 35
    ENTIER  décalage et aller à l'état 3
    IF      décalage et aller à l'état 4
    WHILE   décalage et aller à l'état 5
    DO      décalage et aller à l'état 6
    FOR     décalage et aller à l'état 7
    '('     décalage et aller à l'état 8

    action          aller à l'état 84
    instruction     aller à l'état 12
    declaration     aller à l'état 13
    affectation     aller à l'état 14
    valeur          aller à l'état 15
    expression      aller à l'état 16
    operation       aller à l'état 17
    condition       aller à l'état 18
    boucle          aller à l'état 19
    incrementation  aller à l'état 20


État 78

   30 boucle: WHILE '(' comparaison ')' '{' . action '}'

    ID      décalage et aller à l'état 1
    TYPE    décalage et aller à l'état 35
    ENTIER  décalage et aller à l'état 3
    IF      décalage et aller à l'état 4
    WHILE   décalage et aller à l'état 5
    DO      décalage et aller à l'état 6
    FOR     décalage et aller à l'état 7
    '('     décalage et aller à l'état 8

    action          aller à l'état 85
    instruction     aller à l'état 12
    declaration     aller à l'état 13
    affectation     aller à l'état 14
    valeur          aller à l'état 15
    expression      aller à l'état 16
    operation       aller à l'état 17
    condition       aller à l'état 18
    boucle          aller à l'état 19
    incrementation  aller à l'état 20


État 79

   31 boucle: DO '{' action '}' WHILE . '(' comparaison ')' ';'

    '('  décalage et aller à l'état 86


État 80

   32 boucle: FOR '(' TYPE affectation ';' . comparaison ';' incrementation ')' '{' action '}'
   33       | FOR '(' TYPE affectation ';' . comparaison ';' operation ')' '{' action '}'

    ID      décalage et aller à l'état 31
    ENTIER  décalage et aller à l'état 3
    '('     décalage et aller à l'état 8

    valeur       aller à l'état 15
    expression   aller à l'état 48
    operation    aller à l'état 33
    comparaison  aller à l'état 87


État 81

    6 retour: RETURN . ENTIER ';'

    ENTIER  décalage et aller à l'état 88


État 82

    5 fonction: TYPE MAIN '(' ')' '{' retour . '}'

    '}'  décalage et aller à l'état 89


État 83

    4 fonction: TYPE MAIN '(' ')' '{' action . retour '}'

    RETURN  décalage et aller à l'état 81

    retour  aller à l'état 90


État 84

   28 condition: IF '(' comparaison ')' '{' action . '}'
   29          | IF '(' comparaison ')' '{' action . '}' ELSE '{' action '}'

    '}'  décalage et aller à l'état 91


État 85

   30 boucle: WHILE '(' comparaison ')' '{' action . '}'

    '}'  décalage et aller à l'état 92


État 86

   31 boucle: DO '{' action '}' WHILE '(' . comparaison ')' ';'

    ID      décalage et aller à l'état 31
    ENTIER  décalage et aller à l'état 3
    '('     décalage et aller à l'état 8

    valeur       aller à l'état 15
    expression   aller à l'état 48
    operation    aller à l'état 33
    comparaison  aller à l'état 93


État 87

   32 boucle: FOR '(' TYPE affectation ';' comparaison . ';' incrementation ')' '{' action '}'
   33       | FOR '(' TYPE affectation ';' comparaison . ';' operation ')' '{' action '}'

    ';'  décalage et aller à l'état 94


État 88

    6 retour: RETURN ENTIER . ';'

    ';'  décalage et aller à l'état 95


État 89

    5 fonction: TYPE MAIN '(' ')' '{' retour '}' .

    $défaut  réduction par utilisation de la règle 5 (fonction)


État 90

    4 fonction: TYPE MAIN '(' ')' '{' action retour . '}'

    '}'  décalage et aller à l'état 96


État 91

   28 condition: IF '(' comparaison ')' '{' action '}' .
   29          | IF '(' comparaison ')' '{' action '}' . ELSE '{' action '}'

    ELSE  décalage et aller à l'état 97

    $défaut  réduction par utilisation de la règle 28 (condition)


État 92

   30 boucle: WHILE '(' comparaison ')' '{' action '}' .

    $défaut  réduction par utilisation de la règle 30 (boucle)


État 93

   31 boucle: DO '{' action '}' WHILE '(' comparaison . ')' ';'

    ')'  décalage et aller à l'état 98


État 94

   32 boucle: FOR '(' TYPE affectation ';' comparaison ';' . incrementation ')' '{' action '}'
   33       | FOR '(' TYPE affectation ';' comparaison ';' . operation ')' '{' action '}'

    ID      décalage et aller à l'état 99
    ENTIER  décalage et aller à l'état 3
    '('     décalage et aller à l'état 8

    valeur          aller à l'état 15
    expression      aller à l'état 16
    operation       aller à l'état 100
    incrementation  aller à l'état 101


État 95

    6 retour: RETURN ENTIER ';' .

    $défaut  réduction par utilisation de la règle 6 (retour)


État 96

    4 fonction: TYPE MAIN '(' ')' '{' action retour '}' .

    $défaut  réduction par utilisation de la règle 4 (fonction)


État 97

   29 condition: IF '(' comparaison ')' '{' action '}' ELSE . '{' action '}'

    '{'  décalage et aller à l'état 102


État 98

   31 boucle: DO '{' action '}' WHILE '(' comparaison ')' . ';'

    ';'  décalage et aller à l'état 103


État 99

   20 valeur: ID .
   34 incrementation: ID . INCR
   35               | ID . DECR

    INCR  décalage et aller à l'état 21
    DECR  décalage et aller à l'état 22

    $défaut  réduction par utilisation de la règle 20 (valeur)


État 100

   22 expression: operation .
   33 boucle: FOR '(' TYPE affectation ';' comparaison ';' operation . ')' '{' action '}'

    ')'  décalage et aller à l'état 104

    $défaut  réduction par utilisation de la règle 22 (expression)


État 101

   32 boucle: FOR '(' TYPE affectation ';' comparaison ';' incrementation . ')' '{' action '}'

    ')'  décalage et aller à l'état 105


État 102

   29 condition: IF '(' comparaison ')' '{' action '}' ELSE '{' . action '}'

    ID      décalage et aller à l'état 1
    TYPE    décalage et aller à l'état 35
    ENTIER  décalage et aller à l'état 3
    IF      décalage et aller à l'état 4
    WHILE   décalage et aller à l'état 5
    DO      décalage et aller à l'état 6
    FOR     décalage et aller à l'état 7
    '('     décalage et aller à l'état 8

    action          aller à l'état 106
    instruction     aller à l'état 12
    declaration     aller à l'état 13
    affectation     aller à l'état 14
    valeur          aller à l'état 15
    expression      aller à l'état 16
    operation       aller à l'état 17
    condition       aller à l'état 18
    boucle          aller à l'état 19
    incrementation  aller à l'état 20


État 103

   31 boucle: DO '{' action '}' WHILE '(' comparaison ')' ';' .

    $défaut  réduction par utilisation de la règle 31 (boucle)


État 104

   33 boucle: FOR '(' TYPE affectation ';' comparaison ';' operation ')' . '{' action '}'

    '{'  décalage et aller à l'état 107


État 105

   32 boucle: FOR '(' TYPE affectation ';' comparaison ';' incrementation ')' . '{' action '}'

    '{'  décalage et aller à l'état 108


État 106

   29 condition: IF '(' comparaison ')' '{' action '}' ELSE '{' action . '}'

    '}'  décalage et aller à l'état 109


État 107

   33 boucle: FOR '(' TYPE affectation ';' comparaison ';' operation ')' '{' . action '}'

    ID      décalage et aller à l'état 1
    TYPE    décalage et aller à l'état 35
    ENTIER  décalage et aller à l'état 3
    IF      décalage et aller à l'état 4
    WHILE   décalage et aller à l'état 5
    DO      décalage et aller à l'état 6
    FOR     décalage et aller à l'état 7
    '('     décalage et aller à l'état 8

    action          aller à l'état 110
    instruction     aller à l'état 12
    declaration     aller à l'état 13
    affectation     aller à l'état 14
    valeur          aller à l'état 15
    expression      aller à l'état 16
    operation       aller à l'état 17
    condition       aller à l'état 18
    boucle          aller à l'état 19
    incrementation  aller à l'état 20


État 108

   32 boucle: FOR '(' TYPE affectation ';' comparaison ';' incrementation ')' '{' . action '}'

    ID      décalage et aller à l'état 1
    TYPE    décalage et aller à l'état 35
    ENTIER  décalage et aller à l'état 3
    IF      décalage et aller à l'état 4
    WHILE   décalage et aller à l'état 5
    DO      décalage et aller à l'état 6
    FOR     décalage et aller à l'état 7
    '('     décalage et aller à l'état 8

    action          aller à l'état 111
    instruction     aller à l'état 12
    declaration     aller à l'état 13
    affectation     aller à l'état 14
    valeur          aller à l'état 15
    expression      aller à l'état 16
    operation       aller à l'état 17
    condition       aller à l'état 18
    boucle          aller à l'état 19
    incrementation  aller à l'état 20


État 109

   29 condition: IF '(' comparaison ')' '{' action '}' ELSE '{' action '}' .

    $défaut  réduction par utilisation de la règle 29 (condition)


État 110

   33 boucle: FOR '(' TYPE affectation ';' comparaison ';' operation ')' '{' action . '}'

    '}'  décalage et aller à l'état 112


État 111

   32 boucle: FOR '(' TYPE affectation ';' comparaison ';' incrementation ')' '{' action . '}'

    '}'  décalage et aller à l'état 113


État 112

   33 boucle: FOR '(' TYPE affectation ';' comparaison ';' operation ')' '{' action '}' .

    $défaut  réduction par utilisation de la règle 33 (boucle)


État 113

   32 boucle: FOR '(' TYPE affectation ';' comparaison ';' incrementation ')' '{' action '}' .

    $défaut  réduction par utilisation de la règle 32 (boucle)
