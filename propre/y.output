Terminaux inutilisés dans la grammaire

   END
   OP_EGAL
   OP_DIFF
   OP_SUPEG
   OP_INFEG
   BLANCS
   FOR
   WHILE
   DO
   IF
   ELSE
   TRUE
   FALSE
   OR
   AND
   NOT


Grammaire

    0 $accept: axiom $end

    1 axiom: fonction

    2 fonction: TYPE ID arguments bloc

    3 arguments: '(' ')'

    4 bloc: '{' '}'
    5     | '{' instructions '}'

    6 instructions: instruction
    7             | instruction instructions

    8 instruction: declaration ';'
    9            | expr ';'
   10            | appel ';'

   11 appel: ID arguments ';'

   12 declaration: TYPE ID
   13            | TYPE assignation

   14 assignation: ID '=' expr

   15 expr: expr '+' expr
   16     | expr '-' expr
   17     | expr '*' expr
   18     | expr '/' expr
   19     | '(' expr ')'
   20     | ENTIER
   21     | ID


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
'(' (40) 3 19
')' (41) 3 19
'*' (42) 17
'+' (43) 15
'-' (45) 16
'/' (47) 18
';' (59) 8 9 10 11
'=' (61) 14
'{' (123) 4 5
'}' (125) 4 5
error (256)
END (258)
OP_EGAL (259)
OP_DIFF (260)
OP_SUPEG (261)
OP_INFEG (262)
BLANCS (263)
ID (264) 2 11 12 14 21
ENTIER (265) 20
TYPE (266) 2 12 13
FOR (267)
WHILE (268)
DO (269)
IF (270)
ELSE (271)
TRUE (272)
FALSE (273)
OR (274)
AND (275)
NOT (276)


Non-terminaux, suivis des règles où ils apparaissent

$accept (32)
    à gauche: 0
axiom (33)
    à gauche: 1, à droite: 0
fonction (34)
    à gauche: 2, à droite: 1
arguments (35)
    à gauche: 3, à droite: 2 11
bloc (36)
    à gauche: 4 5, à droite: 2
instructions (37)
    à gauche: 6 7, à droite: 5 7
instruction (38)
    à gauche: 8 9 10, à droite: 6 7
appel (39)
    à gauche: 11, à droite: 10
declaration (40)
    à gauche: 12 13, à droite: 8
assignation (41)
    à gauche: 14, à droite: 13
expr (42)
    à gauche: 15 16 17 18 19 20 21, à droite: 9 14 15 16 17 18 19


État 0

    0 $accept: . axiom $end

    TYPE  décalage et aller à l'état 1

    axiom     aller à l'état 2
    fonction  aller à l'état 3


État 1

    2 fonction: TYPE . ID arguments bloc

    ID  décalage et aller à l'état 4


État 2

    0 $accept: axiom . $end

    $end  décalage et aller à l'état 5


État 3

    1 axiom: fonction .

    $défaut  réduction par utilisation de la règle 1 (axiom)


État 4

    2 fonction: TYPE ID . arguments bloc

    '('  décalage et aller à l'état 6

    arguments  aller à l'état 7


État 5

    0 $accept: axiom $end .

    $défaut  accepter


État 6

    3 arguments: '(' . ')'

    ')'  décalage et aller à l'état 8


État 7

    2 fonction: TYPE ID arguments . bloc

    '{'  décalage et aller à l'état 9

    bloc  aller à l'état 10


État 8

    3 arguments: '(' ')' .

    $défaut  réduction par utilisation de la règle 3 (arguments)


État 9

    4 bloc: '{' . '}'
    5     | '{' . instructions '}'

    ID      décalage et aller à l'état 11
    ENTIER  décalage et aller à l'état 12
    TYPE    décalage et aller à l'état 13
    '('     décalage et aller à l'état 14
    '}'     décalage et aller à l'état 15

    instructions  aller à l'état 16
    instruction   aller à l'état 17
    appel         aller à l'état 18
    declaration   aller à l'état 19
    expr          aller à l'état 20


État 10

    2 fonction: TYPE ID arguments bloc .

    $défaut  réduction par utilisation de la règle 2 (fonction)


État 11

   11 appel: ID . arguments ';'
   21 expr: ID .

    '('  décalage et aller à l'état 6

    $défaut  réduction par utilisation de la règle 21 (expr)

    arguments  aller à l'état 21


État 12

   20 expr: ENTIER .

    $défaut  réduction par utilisation de la règle 20 (expr)


État 13

   12 declaration: TYPE . ID
   13            | TYPE . assignation

    ID  décalage et aller à l'état 22

    assignation  aller à l'état 23


État 14

   19 expr: '(' . expr ')'

    ID      décalage et aller à l'état 24
    ENTIER  décalage et aller à l'état 12
    '('     décalage et aller à l'état 14

    expr  aller à l'état 25


État 15

    4 bloc: '{' '}' .

    $défaut  réduction par utilisation de la règle 4 (bloc)


État 16

    5 bloc: '{' instructions . '}'

    '}'  décalage et aller à l'état 26


État 17

    6 instructions: instruction .
    7             | instruction . instructions

    ID      décalage et aller à l'état 11
    ENTIER  décalage et aller à l'état 12
    TYPE    décalage et aller à l'état 13
    '('     décalage et aller à l'état 14

    $défaut  réduction par utilisation de la règle 6 (instructions)

    instructions  aller à l'état 27
    instruction   aller à l'état 17
    appel         aller à l'état 18
    declaration   aller à l'état 19
    expr          aller à l'état 20


État 18

   10 instruction: appel . ';'

    ';'  décalage et aller à l'état 28


État 19

    8 instruction: declaration . ';'

    ';'  décalage et aller à l'état 29


État 20

    9 instruction: expr . ';'
   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr

    '+'  décalage et aller à l'état 30
    '-'  décalage et aller à l'état 31
    '*'  décalage et aller à l'état 32
    '/'  décalage et aller à l'état 33
    ';'  décalage et aller à l'état 34


État 21

   11 appel: ID arguments . ';'

    ';'  décalage et aller à l'état 35


État 22

   12 declaration: TYPE ID .
   14 assignation: ID . '=' expr

    '='  décalage et aller à l'état 36

    $défaut  réduction par utilisation de la règle 12 (declaration)


État 23

   13 declaration: TYPE assignation .

    $défaut  réduction par utilisation de la règle 13 (declaration)


État 24

   21 expr: ID .

    $défaut  réduction par utilisation de la règle 21 (expr)


État 25

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | '(' expr . ')'

    '+'  décalage et aller à l'état 30
    '-'  décalage et aller à l'état 31
    '*'  décalage et aller à l'état 32
    '/'  décalage et aller à l'état 33
    ')'  décalage et aller à l'état 37


État 26

    5 bloc: '{' instructions '}' .

    $défaut  réduction par utilisation de la règle 5 (bloc)


État 27

    7 instructions: instruction instructions .

    $défaut  réduction par utilisation de la règle 7 (instructions)


État 28

   10 instruction: appel ';' .

    $défaut  réduction par utilisation de la règle 10 (instruction)


État 29

    8 instruction: declaration ';' .

    $défaut  réduction par utilisation de la règle 8 (instruction)


État 30

   15 expr: expr '+' . expr

    ID      décalage et aller à l'état 24
    ENTIER  décalage et aller à l'état 12
    '('     décalage et aller à l'état 14

    expr  aller à l'état 38


État 31

   16 expr: expr '-' . expr

    ID      décalage et aller à l'état 24
    ENTIER  décalage et aller à l'état 12
    '('     décalage et aller à l'état 14

    expr  aller à l'état 39


État 32

   17 expr: expr '*' . expr

    ID      décalage et aller à l'état 24
    ENTIER  décalage et aller à l'état 12
    '('     décalage et aller à l'état 14

    expr  aller à l'état 40


État 33

   18 expr: expr '/' . expr

    ID      décalage et aller à l'état 24
    ENTIER  décalage et aller à l'état 12
    '('     décalage et aller à l'état 14

    expr  aller à l'état 41


État 34

    9 instruction: expr ';' .

    $défaut  réduction par utilisation de la règle 9 (instruction)


État 35

   11 appel: ID arguments ';' .

    $défaut  réduction par utilisation de la règle 11 (appel)


État 36

   14 assignation: ID '=' . expr

    ID      décalage et aller à l'état 24
    ENTIER  décalage et aller à l'état 12
    '('     décalage et aller à l'état 14

    expr  aller à l'état 42


État 37

   19 expr: '(' expr ')' .

    $défaut  réduction par utilisation de la règle 19 (expr)


État 38

   15 expr: expr . '+' expr
   15     | expr '+' expr .
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr

    '*'  décalage et aller à l'état 32
    '/'  décalage et aller à l'état 33

    $défaut  réduction par utilisation de la règle 15 (expr)


État 39

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   16     | expr '-' expr .
   17     | expr . '*' expr
   18     | expr . '/' expr

    '*'  décalage et aller à l'état 32
    '/'  décalage et aller à l'état 33

    $défaut  réduction par utilisation de la règle 16 (expr)


État 40

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   17     | expr '*' expr .
   18     | expr . '/' expr

    $défaut  réduction par utilisation de la règle 17 (expr)


État 41

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   18     | expr '/' expr .

    $défaut  réduction par utilisation de la règle 18 (expr)


État 42

   14 assignation: ID '=' expr .
   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr

    '+'  décalage et aller à l'état 30
    '-'  décalage et aller à l'état 31
    '*'  décalage et aller à l'état 32
    '/'  décalage et aller à l'état 33

    $défaut  réduction par utilisation de la règle 14 (assignation)
