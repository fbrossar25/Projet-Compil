Terminaux inutilisés dans la grammaire

   END
   OP_EGAL
   OP_DIFF
   OP_SUPEG
   OP_INFEG
   BLANCS
   FOR
   WHILE
   DO
   IF
   ELSE
   TRUE
   FALSE
   OR
   AND
   NOT


Grammaire

    0 $accept: axiom $end

    1 axiom: fonction
    2      | instruction

    3 fonction: TYPE ID arguments bloc

    4 arguments: '(' ')'

    5 bloc: '{' '}'
    6     | '{' instructions '}'

    7 instructions: instruction
    8             | instruction instructions

    9 instruction: declaration ';'
   10            | expr ';'
   11            | appel ';'

   12 appel: ID arguments ';'

   13 declaration: TYPE ID
   14            | TYPE assignation

   15 assignation: ID '=' expr

   16 expr: expr '+' expr
   17     | expr '-' expr
   18     | expr '*' expr
   19     | expr '/' expr
   20     | '(' expr ')'
   21     | '-' expr
   22     | ENTIER
   23     | ID


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
'(' (40) 4 20
')' (41) 4 20
'*' (42) 18
'+' (43) 16
'-' (45) 17 21
'/' (47) 19
';' (59) 9 10 11 12
'=' (61) 15
'{' (123) 5 6
'}' (125) 5 6
error (256)
END (258)
OP_EGAL (259)
OP_DIFF (260)
OP_SUPEG (261)
OP_INFEG (262)
BLANCS (263)
ID (264) 3 12 13 15 23
ENTIER (265) 22
TYPE (266) 3 13 14
FOR (267)
WHILE (268)
DO (269)
IF (270)
ELSE (271)
TRUE (272)
FALSE (273)
OR (274)
AND (275)
NOT (276)
UMOINS (277)


Non-terminaux, suivis des règles où ils apparaissent

$accept (33)
    à gauche: 0
axiom (34)
    à gauche: 1 2, à droite: 0
fonction (35)
    à gauche: 3, à droite: 1
arguments (36)
    à gauche: 4, à droite: 3 12
bloc (37)
    à gauche: 5 6, à droite: 3
instructions (38)
    à gauche: 7 8, à droite: 6 8
instruction (39)
    à gauche: 9 10 11, à droite: 2 7 8
appel (40)
    à gauche: 12, à droite: 11
declaration (41)
    à gauche: 13 14, à droite: 9
assignation (42)
    à gauche: 15, à droite: 14
expr (43)
    à gauche: 16 17 18 19 20 21 22 23, à droite: 10 15 16 17 18 19
    20 21


État 0

    0 $accept: . axiom $end

    ID      décalage et aller à l'état 1
    ENTIER  décalage et aller à l'état 2
    TYPE    décalage et aller à l'état 3
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5

    axiom        aller à l'état 6
    fonction     aller à l'état 7
    instruction  aller à l'état 8
    appel        aller à l'état 9
    declaration  aller à l'état 10
    expr         aller à l'état 11


État 1

   12 appel: ID . arguments ';'
   23 expr: ID .

    '('  décalage et aller à l'état 12

    $défaut  réduction par utilisation de la règle 23 (expr)

    arguments  aller à l'état 13


État 2

   22 expr: ENTIER .

    $défaut  réduction par utilisation de la règle 22 (expr)


État 3

    3 fonction: TYPE . ID arguments bloc
   13 declaration: TYPE . ID
   14            | TYPE . assignation

    ID  décalage et aller à l'état 14

    assignation  aller à l'état 15


État 4

   21 expr: '-' . expr

    ID      décalage et aller à l'état 16
    ENTIER  décalage et aller à l'état 2
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5

    expr  aller à l'état 17


État 5

   20 expr: '(' . expr ')'

    ID      décalage et aller à l'état 16
    ENTIER  décalage et aller à l'état 2
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5

    expr  aller à l'état 18


État 6

    0 $accept: axiom . $end

    $end  décalage et aller à l'état 19


État 7

    1 axiom: fonction .

    $défaut  réduction par utilisation de la règle 1 (axiom)


État 8

    2 axiom: instruction .

    $défaut  réduction par utilisation de la règle 2 (axiom)


État 9

   11 instruction: appel . ';'

    ';'  décalage et aller à l'état 20


État 10

    9 instruction: declaration . ';'

    ';'  décalage et aller à l'état 21


État 11

   10 instruction: expr . ';'
   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr

    '+'  décalage et aller à l'état 22
    '-'  décalage et aller à l'état 23
    '*'  décalage et aller à l'état 24
    '/'  décalage et aller à l'état 25
    ';'  décalage et aller à l'état 26


État 12

    4 arguments: '(' . ')'

    ')'  décalage et aller à l'état 27


État 13

   12 appel: ID arguments . ';'

    ';'  décalage et aller à l'état 28


État 14

    3 fonction: TYPE ID . arguments bloc
   13 declaration: TYPE ID .
   15 assignation: ID . '=' expr

    '('  décalage et aller à l'état 12
    '='  décalage et aller à l'état 29

    $défaut  réduction par utilisation de la règle 13 (declaration)

    arguments  aller à l'état 30


État 15

   14 declaration: TYPE assignation .

    $défaut  réduction par utilisation de la règle 14 (declaration)


État 16

   23 expr: ID .

    $défaut  réduction par utilisation de la règle 23 (expr)


État 17

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   21     | '-' expr .

    $défaut  réduction par utilisation de la règle 21 (expr)


État 18

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | '(' expr . ')'

    '+'  décalage et aller à l'état 22
    '-'  décalage et aller à l'état 23
    '*'  décalage et aller à l'état 24
    '/'  décalage et aller à l'état 25
    ')'  décalage et aller à l'état 31


État 19

    0 $accept: axiom $end .

    $défaut  accepter


État 20

   11 instruction: appel ';' .

    $défaut  réduction par utilisation de la règle 11 (instruction)


État 21

    9 instruction: declaration ';' .

    $défaut  réduction par utilisation de la règle 9 (instruction)


État 22

   16 expr: expr '+' . expr

    ID      décalage et aller à l'état 16
    ENTIER  décalage et aller à l'état 2
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5

    expr  aller à l'état 32


État 23

   17 expr: expr '-' . expr

    ID      décalage et aller à l'état 16
    ENTIER  décalage et aller à l'état 2
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5

    expr  aller à l'état 33


État 24

   18 expr: expr '*' . expr

    ID      décalage et aller à l'état 16
    ENTIER  décalage et aller à l'état 2
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5

    expr  aller à l'état 34


État 25

   19 expr: expr '/' . expr

    ID      décalage et aller à l'état 16
    ENTIER  décalage et aller à l'état 2
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5

    expr  aller à l'état 35


État 26

   10 instruction: expr ';' .

    $défaut  réduction par utilisation de la règle 10 (instruction)


État 27

    4 arguments: '(' ')' .

    $défaut  réduction par utilisation de la règle 4 (arguments)


État 28

   12 appel: ID arguments ';' .

    $défaut  réduction par utilisation de la règle 12 (appel)


État 29

   15 assignation: ID '=' . expr

    ID      décalage et aller à l'état 16
    ENTIER  décalage et aller à l'état 2
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5

    expr  aller à l'état 36


État 30

    3 fonction: TYPE ID arguments . bloc

    '{'  décalage et aller à l'état 37

    bloc  aller à l'état 38


État 31

   20 expr: '(' expr ')' .

    $défaut  réduction par utilisation de la règle 20 (expr)


État 32

   16 expr: expr . '+' expr
   16     | expr '+' expr .
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr

    '*'  décalage et aller à l'état 24
    '/'  décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 16 (expr)


État 33

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   17     | expr '-' expr .
   18     | expr . '*' expr
   19     | expr . '/' expr

    '*'  décalage et aller à l'état 24
    '/'  décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 17 (expr)


État 34

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   18     | expr '*' expr .
   19     | expr . '/' expr

    $défaut  réduction par utilisation de la règle 18 (expr)


État 35

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   19     | expr '/' expr .

    $défaut  réduction par utilisation de la règle 19 (expr)


État 36

   15 assignation: ID '=' expr .
   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr

    '+'  décalage et aller à l'état 22
    '-'  décalage et aller à l'état 23
    '*'  décalage et aller à l'état 24
    '/'  décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 15 (assignation)


État 37

    5 bloc: '{' . '}'
    6     | '{' . instructions '}'

    ID      décalage et aller à l'état 1
    ENTIER  décalage et aller à l'état 2
    TYPE    décalage et aller à l'état 39
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5
    '}'     décalage et aller à l'état 40

    instructions  aller à l'état 41
    instruction   aller à l'état 42
    appel         aller à l'état 9
    declaration   aller à l'état 10
    expr          aller à l'état 11


État 38

    3 fonction: TYPE ID arguments bloc .

    $défaut  réduction par utilisation de la règle 3 (fonction)


État 39

   13 declaration: TYPE . ID
   14            | TYPE . assignation

    ID  décalage et aller à l'état 43

    assignation  aller à l'état 15


État 40

    5 bloc: '{' '}' .

    $défaut  réduction par utilisation de la règle 5 (bloc)


État 41

    6 bloc: '{' instructions . '}'

    '}'  décalage et aller à l'état 44


État 42

    7 instructions: instruction .
    8             | instruction . instructions

    ID      décalage et aller à l'état 1
    ENTIER  décalage et aller à l'état 2
    TYPE    décalage et aller à l'état 39
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5

    $défaut  réduction par utilisation de la règle 7 (instructions)

    instructions  aller à l'état 45
    instruction   aller à l'état 42
    appel         aller à l'état 9
    declaration   aller à l'état 10
    expr          aller à l'état 11


État 43

   13 declaration: TYPE ID .
   15 assignation: ID . '=' expr

    '='  décalage et aller à l'état 29

    $défaut  réduction par utilisation de la règle 13 (declaration)


État 44

    6 bloc: '{' instructions '}' .

    $défaut  réduction par utilisation de la règle 6 (bloc)


État 45

    8 instructions: instruction instructions .

    $défaut  réduction par utilisation de la règle 8 (instructions)
