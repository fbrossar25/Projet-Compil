Terminaux inutilisés dans la grammaire

   END
   OP_EGAL
   OP_DIFF
   OP_SUPEG
   OP_INFEG
   BLANCS
   FOR
   WHILE
   DO
   IF
   ELSE
   TRUE
   FALSE
<<<<<<< Updated upstream
   NOT


État 14 conflits: 1 décalage/réduction
État 16 conflits: 7 décalage/réduction
État 31 conflits: 1 décalage/réduction
État 32 conflits: 1 décalage/réduction
État 33 conflits: 1 décalage/réduction
État 34 conflits: 1 décalage/réduction
État 35 conflits: 1 décalage/réduction
État 36 conflits: 1 décalage/réduction
État 37 conflits: 7 décalage/réduction
=======
   OR
   AND
   NOT
>>>>>>> Stashed changes


Grammaire

    0 $accept: axiom $end

    1 axiom: fonction

    2 fonction: TYPE ID arguments bloc

    3 arguments: '(' ')'

    4 bloc: '{' '}'
    5     | '{' instructions '}'

<<<<<<< Updated upstream
   10 expr: expr '+' expr
   11     | expr '-' expr
   12     | expr '/' expr
   13     | expr '*' expr
   14     | expr '%' expr
   15     | expr OR expr
   16     | expr AND expr
   17     | '!' expr
   18     | '(' expr ')'
   19     | '-' expr
   20     | ID
   21     | ENTIER
=======
    6 instructions: instruction
    7             | instruction instructions

    8 instruction: declaration ';'
    9            | expr ';'
   10            | appel ';'

   11 appel: ID arguments ';'

   12 declaration: TYPE ID
   13            | TYPE assignation

   14 assignation: ID '=' expr

   15 expr: expr '+' expr
   16     | expr '-' expr
   17     | expr '*' expr
   18     | expr '/' expr
   19     | '(' expr ')'
   20     | ENTIER
   21     | ID
>>>>>>> Stashed changes


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
<<<<<<< Updated upstream
'\n' (10) 3 6
'!' (33) 17
'%' (37) 14
'(' (40) 5 6 18
')' (41) 5 6 18
'*' (42) 13
'+' (43) 10
'-' (45) 11 19
'/' (47) 12
';' (59) 7 8
'{' (123) 5 6
'}' (125) 5 6
=======
'(' (40) 3 19
')' (41) 3 19
'*' (42) 17
'+' (43) 15
'-' (45) 16
'/' (47) 18
';' (59) 8 9 10 11
'=' (61) 14
'{' (123) 4 5
'}' (125) 4 5
>>>>>>> Stashed changes
error (256)
END (258)
OP_EGAL (259)
OP_DIFF (260)
OP_SUPEG (261)
OP_INFEG (262)
<<<<<<< Updated upstream
BLANCS (263) 6
ID (264) 5 6 9 20
ENTIER (265) 21
TYPE (266) 5 6 9
=======
BLANCS (263)
ID (264) 2 11 12 14 21
ENTIER (265) 20
TYPE (266) 2 12 13
>>>>>>> Stashed changes
FOR (267)
WHILE (268)
DO (269)
IF (270)
ELSE (271)
TRUE (272)
FALSE (273)
<<<<<<< Updated upstream
OR (274) 15
AND (275) 16
NOT (276)
UMINUS (277)
=======
OR (274)
AND (275)
NOT (276)
>>>>>>> Stashed changes


Non-terminaux, suivis des règles où ils apparaissent

<<<<<<< Updated upstream
$accept (35)
    à gauche: 0
axiom (36)
    à gauche: 1 2 3 4, à droite: 0
fonction (37)
    à gauche: 5 6, à droite: 1
instruction (38)
    à gauche: 7 8, à droite: 2 5
declaration (39)
    à gauche: 9, à droite: 8
expr (40)
    à gauche: 10 11 12 13 14 15 16 17 18 19 20 21, à droite: 3 4
    7 10 11 12 13 14 15 16 17 18 19
=======
$accept (32)
    à gauche: 0
axiom (33)
    à gauche: 1, à droite: 0
fonction (34)
    à gauche: 2, à droite: 1
arguments (35)
    à gauche: 3, à droite: 2 11
bloc (36)
    à gauche: 4 5, à droite: 2
instructions (37)
    à gauche: 6 7, à droite: 5 7
instruction (38)
    à gauche: 8 9 10, à droite: 6 7
appel (39)
    à gauche: 11, à droite: 10
declaration (40)
    à gauche: 12 13, à droite: 8
assignation (41)
    à gauche: 14, à droite: 13
expr (42)
    à gauche: 15 16 17 18 19 20 21, à droite: 9 14 15 16 17 18 19
>>>>>>> Stashed changes


État 0

    0 $accept: . axiom $end

<<<<<<< Updated upstream
    ID      décalage et aller à l'état 1
    ENTIER  décalage et aller à l'état 2
    TYPE    décalage et aller à l'état 3
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5
    '!'     décalage et aller à l'état 6

    axiom        aller à l'état 7
    fonction     aller à l'état 8
    instruction  aller à l'état 9
    declaration  aller à l'état 10
    expr         aller à l'état 11
=======
    TYPE  décalage et aller à l'état 1

    axiom     aller à l'état 2
    fonction  aller à l'état 3
>>>>>>> Stashed changes


État 1

<<<<<<< Updated upstream
   20 expr: ID .

    $défaut  réduction par utilisation de la règle 20 (expr)
=======
    2 fonction: TYPE . ID arguments bloc

    ID  décalage et aller à l'état 4
>>>>>>> Stashed changes


État 2

<<<<<<< Updated upstream
   21 expr: ENTIER .

    $défaut  réduction par utilisation de la règle 21 (expr)
=======
    0 $accept: axiom . $end

    $end  décalage et aller à l'état 5
>>>>>>> Stashed changes


État 3

    1 axiom: fonction .

<<<<<<< Updated upstream
    BLANCS  décalage et aller à l'état 12
    ID      décalage et aller à l'état 13
=======
    $défaut  réduction par utilisation de la règle 1 (axiom)
>>>>>>> Stashed changes


État 4

<<<<<<< Updated upstream
   19 expr: '-' . expr

    ID      décalage et aller à l'état 1
    ENTIER  décalage et aller à l'état 2
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5
    '!'     décalage et aller à l'état 6

    expr  aller à l'état 14
=======
    2 fonction: TYPE ID . arguments bloc

    '('  décalage et aller à l'état 6

    arguments  aller à l'état 7
>>>>>>> Stashed changes


État 5

<<<<<<< Updated upstream
   18 expr: '(' . expr ')'

    ID      décalage et aller à l'état 1
    ENTIER  décalage et aller à l'état 2
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5
    '!'     décalage et aller à l'état 6

    expr  aller à l'état 15
=======
    0 $accept: axiom $end .

    $défaut  accepter
>>>>>>> Stashed changes


État 6

<<<<<<< Updated upstream
   17 expr: '!' . expr

    ID      décalage et aller à l'état 1
    ENTIER  décalage et aller à l'état 2
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5
    '!'     décalage et aller à l'état 6

    expr  aller à l'état 16
=======
    3 arguments: '(' . ')'

    ')'  décalage et aller à l'état 8
>>>>>>> Stashed changes


État 7

<<<<<<< Updated upstream
    0 $accept: axiom . $end

    $end  décalage et aller à l'état 17


État 8

    1 axiom: fonction .
=======
    2 fonction: TYPE ID arguments . bloc
>>>>>>> Stashed changes

    '{'  décalage et aller à l'état 9

    bloc  aller à l'état 10


État 9

    3 arguments: '(' ')' .

    $défaut  réduction par utilisation de la règle 3 (arguments)


État 10

    4 bloc: '{' . '}'
    5     | '{' . instructions '}'

<<<<<<< Updated upstream
    ';'  décalage et aller à l'état 18
=======
    ID      décalage et aller à l'état 11
    ENTIER  décalage et aller à l'état 12
    TYPE    décalage et aller à l'état 13
    '('     décalage et aller à l'état 14
    '}'     décalage et aller à l'état 15
>>>>>>> Stashed changes

    instructions  aller à l'état 16
    instruction   aller à l'état 17
    appel         aller à l'état 18
    declaration   aller à l'état 19
    expr          aller à l'état 20

<<<<<<< Updated upstream
État 11

    3 axiom: expr . '\n'
    4      | expr .
    7 instruction: expr . ';'
   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '/' expr
   13     | expr . '*' expr
   14     | expr . '%' expr
   15     | expr . OR expr
   16     | expr . AND expr

    OR    décalage et aller à l'état 19
    AND   décalage et aller à l'état 20
    '+'   décalage et aller à l'état 21
    '-'   décalage et aller à l'état 22
    '*'   décalage et aller à l'état 23
    '/'   décalage et aller à l'état 24
    '\n'  décalage et aller à l'état 25
    ';'   décalage et aller à l'état 26
    '%'   décalage et aller à l'état 27
=======

État 10

    2 fonction: TYPE ID arguments bloc .
>>>>>>> Stashed changes

    $défaut  réduction par utilisation de la règle 2 (fonction)


État 12

   11 appel: ID . arguments ';'
   21 expr: ID .

<<<<<<< Updated upstream
    ID  décalage et aller à l'état 28
=======
    '('  décalage et aller à l'état 6
>>>>>>> Stashed changes

    $défaut  réduction par utilisation de la règle 21 (expr)

    arguments  aller à l'état 21

<<<<<<< Updated upstream
État 13
=======
>>>>>>> Stashed changes

État 12

<<<<<<< Updated upstream
    '('  décalage et aller à l'état 29
=======
   20 expr: ENTIER .
>>>>>>> Stashed changes

    $défaut  réduction par utilisation de la règle 20 (expr)


État 14

<<<<<<< Updated upstream
   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '/' expr
   13     | expr . '*' expr
   14     | expr . '%' expr
   15     | expr . OR expr
   16     | expr . AND expr
   19     | '-' expr .

    '%'  décalage et aller à l'état 27

    '%'       [réduction par utilisation de la règle 19 (expr)]
    $défaut  réduction par utilisation de la règle 19 (expr)
=======
   12 declaration: TYPE . ID
   13            | TYPE . assignation

    ID  décalage et aller à l'état 22

    assignation  aller à l'état 23
>>>>>>> Stashed changes


État 15

<<<<<<< Updated upstream
   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '/' expr
   13     | expr . '*' expr
   14     | expr . '%' expr
   15     | expr . OR expr
   16     | expr . AND expr
   18     | '(' expr . ')'

    OR   décalage et aller à l'état 19
    AND  décalage et aller à l'état 20
    '+'  décalage et aller à l'état 21
    '-'  décalage et aller à l'état 22
    '*'  décalage et aller à l'état 23
    '/'  décalage et aller à l'état 24
    ')'  décalage et aller à l'état 30
    '%'  décalage et aller à l'état 27
=======
   19 expr: '(' . expr ')'

    ID      décalage et aller à l'état 24
    ENTIER  décalage et aller à l'état 12
    '('     décalage et aller à l'état 14

    expr  aller à l'état 25
>>>>>>> Stashed changes


État 16

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '/' expr
   13     | expr . '*' expr
   14     | expr . '%' expr
   15     | expr . OR expr
   16     | expr . AND expr
   17     | '!' expr .

    OR   décalage et aller à l'état 19
    AND  décalage et aller à l'état 20
    '+'  décalage et aller à l'état 21
    '-'  décalage et aller à l'état 22
    '*'  décalage et aller à l'état 23
    '/'  décalage et aller à l'état 24
    '%'  décalage et aller à l'état 27

    OR        [réduction par utilisation de la règle 17 (expr)]
    AND       [réduction par utilisation de la règle 17 (expr)]
    '+'       [réduction par utilisation de la règle 17 (expr)]
    '-'       [réduction par utilisation de la règle 17 (expr)]
    '*'       [réduction par utilisation de la règle 17 (expr)]
    '/'       [réduction par utilisation de la règle 17 (expr)]
    '%'       [réduction par utilisation de la règle 17 (expr)]
    $défaut  réduction par utilisation de la règle 17 (expr)


État 17

    4 bloc: '{' '}' .

    $défaut  réduction par utilisation de la règle 4 (bloc)


État 18

    5 bloc: '{' instructions . '}'

    '}'  décalage et aller à l'état 26


État 19

   15 expr: expr OR . expr

    ID      décalage et aller à l'état 1
    ENTIER  décalage et aller à l'état 2
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5
    '!'     décalage et aller à l'état 6

    expr  aller à l'état 31


État 20

   16 expr: expr AND . expr

    ID      décalage et aller à l'état 1
    ENTIER  décalage et aller à l'état 2
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5
    '!'     décalage et aller à l'état 6

    expr  aller à l'état 32


État 21

    6 instructions: instruction .
    7             | instruction . instructions

<<<<<<< Updated upstream
    ID      décalage et aller à l'état 1
    ENTIER  décalage et aller à l'état 2
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5
    '!'     décalage et aller à l'état 6

    expr  aller à l'état 33
=======
    ID      décalage et aller à l'état 11
    ENTIER  décalage et aller à l'état 12
    TYPE    décalage et aller à l'état 13
    '('     décalage et aller à l'état 14

    $défaut  réduction par utilisation de la règle 6 (instructions)
>>>>>>> Stashed changes

    instructions  aller à l'état 27
    instruction   aller à l'état 17
    appel         aller à l'état 18
    declaration   aller à l'état 19
    expr          aller à l'état 20

<<<<<<< Updated upstream
État 22
=======
>>>>>>> Stashed changes

État 18

<<<<<<< Updated upstream
    ID      décalage et aller à l'état 1
    ENTIER  décalage et aller à l'état 2
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5
    '!'     décalage et aller à l'état 6

    expr  aller à l'état 34
=======
   10 instruction: appel . ';'

    ';'  décalage et aller à l'état 28
>>>>>>> Stashed changes


État 23

<<<<<<< Updated upstream
   13 expr: expr '*' . expr

    ID      décalage et aller à l'état 1
    ENTIER  décalage et aller à l'état 2
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5
    '!'     décalage et aller à l'état 6

    expr  aller à l'état 35
=======
    8 instruction: declaration . ';'

    ';'  décalage et aller à l'état 29
>>>>>>> Stashed changes


État 24

<<<<<<< Updated upstream
   12 expr: expr '/' . expr

    ID      décalage et aller à l'état 1
    ENTIER  décalage et aller à l'état 2
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5
    '!'     décalage et aller à l'état 6

    expr  aller à l'état 36
=======
    9 instruction: expr . ';'
   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr

    '+'  décalage et aller à l'état 30
    '-'  décalage et aller à l'état 31
    '*'  décalage et aller à l'état 32
    '/'  décalage et aller à l'état 33
    ';'  décalage et aller à l'état 34
>>>>>>> Stashed changes


État 25

   11 appel: ID arguments . ';'

    ';'  décalage et aller à l'état 35


État 26

   12 declaration: TYPE ID .
   14 assignation: ID . '=' expr

    '='  décalage et aller à l'état 36

    $défaut  réduction par utilisation de la règle 12 (declaration)

<<<<<<< Updated upstream
État 27
=======
>>>>>>> Stashed changes

État 23

<<<<<<< Updated upstream
    ID      décalage et aller à l'état 1
    ENTIER  décalage et aller à l'état 2
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5
    '!'     décalage et aller à l'état 6

    expr  aller à l'état 37
=======
   13 declaration: TYPE assignation .

    $défaut  réduction par utilisation de la règle 13 (declaration)
>>>>>>> Stashed changes


État 28

   21 expr: ID .

<<<<<<< Updated upstream
    '('  décalage et aller à l'état 38
=======
    $défaut  réduction par utilisation de la règle 21 (expr)
>>>>>>> Stashed changes


État 29

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | '(' expr . ')'

<<<<<<< Updated upstream
    ')'  décalage et aller à l'état 39
=======
    '+'  décalage et aller à l'état 30
    '-'  décalage et aller à l'état 31
    '*'  décalage et aller à l'état 32
    '/'  décalage et aller à l'état 33
    ')'  décalage et aller à l'état 37
>>>>>>> Stashed changes


État 30

   18 expr: '(' expr ')' .

<<<<<<< Updated upstream
    $défaut  réduction par utilisation de la règle 18 (expr)


État 31

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '/' expr
   13     | expr . '*' expr
   14     | expr . '%' expr
   15     | expr . OR expr
   15     | expr OR expr .
   16     | expr . AND expr

    AND  décalage et aller à l'état 20
    '+'  décalage et aller à l'état 21
    '-'  décalage et aller à l'état 22
    '*'  décalage et aller à l'état 23
    '/'  décalage et aller à l'état 24
    '%'  décalage et aller à l'état 27

    '%'       [réduction par utilisation de la règle 15 (expr)]
    $défaut  réduction par utilisation de la règle 15 (expr)
=======
    5 bloc: '{' instructions '}' .

    $défaut  réduction par utilisation de la règle 5 (bloc)
>>>>>>> Stashed changes


État 32

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '/' expr
   13     | expr . '*' expr
   14     | expr . '%' expr
   15     | expr . OR expr
   16     | expr . AND expr
   16     | expr AND expr .

    '+'  décalage et aller à l'état 21
    '-'  décalage et aller à l'état 22
    '*'  décalage et aller à l'état 23
    '/'  décalage et aller à l'état 24
    '%'  décalage et aller à l'état 27

    '%'       [réduction par utilisation de la règle 16 (expr)]
    $défaut  réduction par utilisation de la règle 16 (expr)


État 33

<<<<<<< Updated upstream
   10 expr: expr . '+' expr
   10     | expr '+' expr .
   11     | expr . '-' expr
   12     | expr . '/' expr
   13     | expr . '*' expr
   14     | expr . '%' expr
   15     | expr . OR expr
   16     | expr . AND expr

    '*'  décalage et aller à l'état 23
    '/'  décalage et aller à l'état 24
    '%'  décalage et aller à l'état 27
=======
    7 instructions: instruction instructions .
>>>>>>> Stashed changes

    $défaut  réduction par utilisation de la règle 7 (instructions)


État 34

<<<<<<< Updated upstream
   10 expr: expr . '+' expr
   11     | expr . '-' expr
   11     | expr '-' expr .
   12     | expr . '/' expr
   13     | expr . '*' expr
   14     | expr . '%' expr
   15     | expr . OR expr
   16     | expr . AND expr

    '*'  décalage et aller à l'état 23
    '/'  décalage et aller à l'état 24
    '%'  décalage et aller à l'état 27

    '%'       [réduction par utilisation de la règle 11 (expr)]
    $défaut  réduction par utilisation de la règle 11 (expr)
=======
   10 instruction: appel ';' .

    $défaut  réduction par utilisation de la règle 10 (instruction)
>>>>>>> Stashed changes


État 35

<<<<<<< Updated upstream
   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '/' expr
   13     | expr . '*' expr
   13     | expr '*' expr .
   14     | expr . '%' expr
   15     | expr . OR expr
   16     | expr . AND expr

    '%'  décalage et aller à l'état 27
=======
    8 instruction: declaration ';' .
>>>>>>> Stashed changes

    $défaut  réduction par utilisation de la règle 8 (instruction)


État 36

<<<<<<< Updated upstream
   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '/' expr
   12     | expr '/' expr .
   13     | expr . '*' expr
   14     | expr . '%' expr
   15     | expr . OR expr
   16     | expr . AND expr

    '%'  décalage et aller à l'état 27
=======
   15 expr: expr '+' . expr

    ID      décalage et aller à l'état 24
    ENTIER  décalage et aller à l'état 12
    '('     décalage et aller à l'état 14
>>>>>>> Stashed changes

    expr  aller à l'état 38


État 37

<<<<<<< Updated upstream
   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '/' expr
   13     | expr . '*' expr
   14     | expr . '%' expr
   14     | expr '%' expr .
   15     | expr . OR expr
   16     | expr . AND expr

    OR   décalage et aller à l'état 19
    AND  décalage et aller à l'état 20
    '+'  décalage et aller à l'état 21
    '-'  décalage et aller à l'état 22
    '*'  décalage et aller à l'état 23
    '/'  décalage et aller à l'état 24
    '%'  décalage et aller à l'état 27

    OR        [réduction par utilisation de la règle 14 (expr)]
    AND       [réduction par utilisation de la règle 14 (expr)]
    '+'       [réduction par utilisation de la règle 14 (expr)]
    '-'       [réduction par utilisation de la règle 14 (expr)]
    '*'       [réduction par utilisation de la règle 14 (expr)]
    '/'       [réduction par utilisation de la règle 14 (expr)]
    '%'       [réduction par utilisation de la règle 14 (expr)]
    $défaut  réduction par utilisation de la règle 14 (expr)
=======
   16 expr: expr '-' . expr

    ID      décalage et aller à l'état 24
    ENTIER  décalage et aller à l'état 12
    '('     décalage et aller à l'état 14

    expr  aller à l'état 39
>>>>>>> Stashed changes


État 38

   17 expr: expr '*' . expr

<<<<<<< Updated upstream
    ')'  décalage et aller à l'état 40
=======
    ID      décalage et aller à l'état 24
    ENTIER  décalage et aller à l'état 12
    '('     décalage et aller à l'état 14

    expr  aller à l'état 40
>>>>>>> Stashed changes


État 39

   18 expr: expr '/' . expr

    ID      décalage et aller à l'état 24
    ENTIER  décalage et aller à l'état 12
    '('     décalage et aller à l'état 14

<<<<<<< Updated upstream
    '{'  décalage et aller à l'état 41
=======
    expr  aller à l'état 41
>>>>>>> Stashed changes


État 40

    9 instruction: expr ';' .

<<<<<<< Updated upstream
    '{'  décalage et aller à l'état 42
=======
    $défaut  réduction par utilisation de la règle 9 (instruction)
>>>>>>> Stashed changes


État 41

   11 appel: ID arguments ';' .

<<<<<<< Updated upstream
    ID      décalage et aller à l'état 1
    ENTIER  décalage et aller à l'état 2
    TYPE    décalage et aller à l'état 43
    '-'     décalage et aller à l'état 4
    '('     décalage et aller à l'état 5
    '!'     décalage et aller à l'état 6

    instruction  aller à l'état 44
    declaration  aller à l'état 10
    expr         aller à l'état 45
=======
    $défaut  réduction par utilisation de la règle 11 (appel)
>>>>>>> Stashed changes


État 42

   14 assignation: ID '=' . expr

    ID      décalage et aller à l'état 24
    ENTIER  décalage et aller à l'état 12
    '('     décalage et aller à l'état 14

<<<<<<< Updated upstream
    '}'  décalage et aller à l'état 46
=======
    expr  aller à l'état 42
>>>>>>> Stashed changes


État 43

   19 expr: '(' expr ')' .

<<<<<<< Updated upstream
    ID  décalage et aller à l'état 47
=======
    $défaut  réduction par utilisation de la règle 19 (expr)
>>>>>>> Stashed changes


État 44

   15 expr: expr . '+' expr
   15     | expr '+' expr .
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr

<<<<<<< Updated upstream
    '}'  décalage et aller à l'état 48
=======
    '*'  décalage et aller à l'état 32
    '/'  décalage et aller à l'état 33

    $défaut  réduction par utilisation de la règle 15 (expr)
>>>>>>> Stashed changes


État 45

<<<<<<< Updated upstream
    7 instruction: expr . ';'
   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '/' expr
   13     | expr . '*' expr
   14     | expr . '%' expr
   15     | expr . OR expr
   16     | expr . AND expr

    OR   décalage et aller à l'état 19
    AND  décalage et aller à l'état 20
    '+'  décalage et aller à l'état 21
    '-'  décalage et aller à l'état 22
    '*'  décalage et aller à l'état 23
    '/'  décalage et aller à l'état 24
    ';'  décalage et aller à l'état 26
    '%'  décalage et aller à l'état 27
=======
   15 expr: expr . '+' expr
   16     | expr . '-' expr
   16     | expr '-' expr .
   17     | expr . '*' expr
   18     | expr . '/' expr

    '*'  décalage et aller à l'état 32
    '/'  décalage et aller à l'état 33

    $défaut  réduction par utilisation de la règle 16 (expr)
>>>>>>> Stashed changes


État 46

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   17     | expr '*' expr .
   18     | expr . '/' expr

<<<<<<< Updated upstream
    '\n'  décalage et aller à l'état 49
=======
    $défaut  réduction par utilisation de la règle 17 (expr)
>>>>>>> Stashed changes


État 47

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   18     | expr '/' expr .

    $défaut  réduction par utilisation de la règle 18 (expr)


État 48

<<<<<<< Updated upstream
    5 fonction: TYPE ID '(' ')' '{' instruction '}' .

    $défaut  réduction par utilisation de la règle 5 (fonction)


État 49
=======
   14 assignation: ID '=' expr .
   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
>>>>>>> Stashed changes

    '+'  décalage et aller à l'état 30
    '-'  décalage et aller à l'état 31
    '*'  décalage et aller à l'état 32
    '/'  décalage et aller à l'état 33

    $défaut  réduction par utilisation de la règle 14 (assignation)
