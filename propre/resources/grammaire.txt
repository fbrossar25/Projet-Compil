//majuscule -> token
//minuscule -> rÃ¨gle

AXIOME -> FONCTION

FONCTION -> TYPE ID "()" '{' instruction '}'

TYPE -> "int"

ID -> [[:alpha:]_][[:alnum:]_]*

instruction ->
        declaration
    |   boucle
    |   condition
    |   expression
    |   appel
    |   retour
    |   ignorer

ignorer ->
        commentaire
    |   BLANC

BLANC -> [[:blank:]]

appel -> ID "()"

retour -> "return" expression

entier -> [1-9][0-9]*

declaration ->
        TYPE ID
    |   TYPE affectation

affectation -> ID '=' expression

expression ->
        expression '+' expression
    |   expression '-' expression
    |   expression '*' expression
    |   expression '/' expression
    |   '-' expression
    |   expression '>' expression
    |   expression '<' expression
    |   expression "<=" expression
    |   expression ">=" expression
    |   expression "==" expression
    |   expression "!=" expression
    |   expression "&&" expression
    |   expression "||" expression
    |   '!' expression
    |   '(' expression ')'
    |   entier
    |   affectation
    |   ID

condition ->
        if
    |   if "else" if
    |   if "else" '{' instruction '}'

if -> "if" '(' expression ')' '{' instruction '}'